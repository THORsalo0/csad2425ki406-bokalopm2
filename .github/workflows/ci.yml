name: CI Workflow

on:
  push:
    branches:
      - develop
      - feature/develop/task3
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: windows-latest

    steps:
       # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3






  


      # Завантаження та встановлення Doxygen
      - name: Download and install Doxygen
        run: |
          Invoke-WebRequest -Uri "https://github.com/doxygen/doxygen/releases/latest/download/doxygen-1.9.7.windows.bin.zip" -OutFile "doxygen.zip"
          Expand-Archive -Path "doxygen.zip" -DestinationPath "./doxygen"
          $env:Path += ";$PWD/doxygen/doxygen-1.9.7/bin"
          doxygen -v




         # Generate Doxygen Configuration if Not Exists
      - name: Generate Doxygen Configuration
        run: |
          if (!(Test-Path Doxyfile)) {
            doxygen -g
            (Get-Content Doxyfile) -replace 'OUTPUT_DIRECTORY.*', 'OUTPUT_DIRECTORY = ./docs' | Set-Content Doxyfile
            (Get-Content Doxyfile) -replace 'INPUT.*', 'INPUT = APKS_Lab3/APKS_Lab3 ESP8266_CH340_3' | Set-Content Doxyfile
            (Get-Content Doxyfile) -replace 'RECURSIVE.*', 'RECURSIVE = YES' | Set-Content Doxyfile
            (Get-Content Doxyfile) -replace 'EXTRACT_ALL.*', 'EXTRACT_ALL = YES' | Set-Content Doxyfile

      # Generate Doxygen Documentation
      - name: Generate Doxygen Documentation
        run: doxygen Doxyfile

      # Upload Doxygen Documentation as Artifact
      - name: Upload Documentation as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: DoxygenDocs
          path: ./docs
