name: CI Workflow

on:
  push:
    branches:
      - develop
      - feature/develop/task3
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: windows-latest

    steps:
       # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      # Restore NuGet packages
      - name: Restore NuGet packages
        run: nuget restore ./APKS_Lab3/APKS_Lab3.sln

      # Build solution with output directory
      - name: Build solution
        run: msbuild ./APKS_Lab3/APKS_Lab3.sln /p:Configuration=Release /p:OutDir=${{ github.workspace }}/output/ /verbosity:minimal

      # Перевірка всіх файлів у проекті для відладки
      - name: List all files recursively
        run: Get-ChildItem ./APKS_Lab3 -Recurse

      # Перевірка файлів у obj/Release
      - name: Check output directory
        run: dir ./APKS_Lab3/APKS_Lab3/obj/Release


      # Upload Executable as Artifact
      - name: Upload Executable as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Executable
          path: ./APKS_Lab3/APKS_Lab3/obj/Release/APKS_Lab3.exe
          


    # Restore NuGet packages for test project (UnitTestProject)
      - name: Restore NuGet packages for test project
        run: |
          dotnet restore ./APKS_Lab3/UnitTestProject_Lab3_Software/UnitTestProject_Lab3_Software.csproj

          

      # Run Unit tests
      - name: Run Unit tests
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: Tests/Test_results.txt




       # Install Doxygen using PowerShell
      - name: Install Doxygen
        run: |
          # Download Doxygen installer
          Invoke-WebRequest -Uri "https://doxygen.nl/files/doxygen-1.12.0-setup.exe" -OutFile "$env:TEMP\doxygen-setup.exe"

          # Install Doxygen silently
          Start-Process -FilePath "$env:TEMP\doxygen-setup.exe" -ArgumentList "/S" -Wait




         # Generate Doxygen Configuration if Not Exists
      - name: Generate Doxygen Configuration
        run: |
          if (!(Test-Path Doxyfile)) {
            doxygen -g
            (Get-Content Doxyfile) -replace 'OUTPUT_DIRECTORY.*', 'OUTPUT_DIRECTORY = ./docs' | Set-Content Doxyfile
            (Get-Content Doxyfile) -replace 'INPUT.*', 'INPUT = APKS_Lab3/APKS_Lab3 ESP8266_CH340_3' | Set-Content Doxyfile
            (Get-Content Doxyfile) -replace 'RECURSIVE.*', 'RECURSIVE = YES' | Set-Content Doxyfile
            (Get-Content Doxyfile) -replace 'EXTRACT_ALL.*', 'EXTRACT_ALL = YES' | Set-Content Doxyfile

      # Generate Doxygen Documentation
      - name: Generate Doxygen Documentation
        run: doxygen Doxyfile

      # Upload Doxygen Documentation as Artifact
      - name: Upload Documentation as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: DoxygenDocs
          path: ./docs
