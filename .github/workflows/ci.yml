name: CI Workflow

on:
  push:
    branches:
      - develop
      - feature/develop/task3
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: windows-latest

    steps:
       # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      # Restore NuGet packages
      - name: Restore NuGet packages
        run: nuget restore ./APKS_Lab3/APKS_Lab3.sln

      # Build solution with output directory
      - name: Build solution
        run: msbuild ./APKS_Lab3/APKS_Lab3.sln /p:Configuration=Release /p:OutDir=${{ github.workspace }}/output/ /verbosity:minimal

      # Перевірка всіх файлів у проекті для відладки
      - name: List all files recursively
        run: Get-ChildItem ./APKS_Lab3 -Recurse

      # Перевірка файлів у obj/Release
      - name: Check output directory
        run: dir ./APKS_Lab3/APKS_Lab3/obj/Release


      # Upload Executable as Artifact
      - name: Upload Executable as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Executable
          path: ./APKS_Lab3/APKS_Lab3/obj/Release/APKS_Lab3.exe
          


      # Runs a set of commands using the runners shell
       # Install Arduino CLI 
      - name: Set up Arduino
        run: |
          Invoke-WebRequest -Uri https://downloads.arduino.cc/arduino-cli/arduino-cli_latest_Linux_64bit.tar.gz -OutFile arduino-cli_latest_Linux_64bit.tar.gz
          tar -xvf arduino-cli_latest_Linux_64bit.tar.gz
          # Створюємо директорію, якщо вона не існує
          New-Item -Path "C:\Program Files\Arduino CLI" -ItemType Directory -Force
          # Переміщаємо файл в правильну директорію
          Move-Item -Path arduino-cli -Destination "C:\Program Files\Arduino CLI\arduino-cli.exe"
          
          # Додаємо директорію до системного шляху PATH
          [System.Environment]::SetEnvironmentVariable("PATH", $env:PATH + ";C:\Program Files\Arduino CLI", [System.EnvironmentVariableTarget]::Machine)
      
          # Викликаємо arduino-cli через абсолютний шлях або доданий до PATH
          & "C:\Program Files\Arduino CLI\arduino-cli.exe" config init

          
      - name: Add ESP8266 package
        run: |
          arduino-cli config set board_manager.additional_urls http://arduino.esp8266.com/stable/package_esp8266com_index.json
          
      - name: Install ESP8266
        run: |
          arduino-cli core update-index
          arduino-cli core install esp8266:esp8266  # Install the ESP8266 core

      - name: Compile Arduino Sketch for NodeMCU v3 wifi
        run: |
          mkdir -p build  # Ensure the build directory exists
          arduino-cli compile --fqbn esp8266:esp8266:nodemcuv2 --output-dir build ESP8266_CH340_3/ESP8266_CH340_3.ino
          
      # Collect binaries as artifacts
      - name: Upload binaries reports
        uses: actions/upload-artifact@v3
        with:
          name: compiled-files
          path: build/*.bin 



      # Run PowerShell Tests
      - name: Run PowerShell Tests
        shell: pwsh
        run: |
          # Run the tests
          .\Tests\Tests.ps1 | Tee-Object -FilePath serial_output.log

      # Upload test reports as an artifact
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: serial_output.log
